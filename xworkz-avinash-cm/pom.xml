<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.source</groupId>
  <artifactId>avinash</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <properties>
		<spring.version>5.3.24</spring.version>  <!--to spring initialize...-->
		<lombok.version>1.18.24</lombok.version>
		<quarkus.version>1.13.7.Final</quarkus.version>
		<hibernate.version>5.6.15.Final</hibernate.version>
		<mysql.version>8.0.29</mysql.version>
		<jstl.verison>1.2</jstl.verison>
		<slf4j.version>1.7.25</slf4j.version>
		<qos.logback.version>1.2.3</qos.logback.version>
		<Passcode.version>5.3.3.RELEASE</Passcode.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-validator</artifactId>
			<version>${quarkus.version}</version> <!--its for validation-->
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>  <!--TO handle request and respond-->
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>     <!-- to use setter,getter,not nul.....etc using annotation ...using predefined annotation-->
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId><!--Web module view controller-->
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId> <!--its for convert for object to values....-->
			<version>${hibernate.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-orm -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId> <!--its for convert for object to values....it wil write query to convert object to value-->
			<version>${spring.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId> <!-- to connect java to my sql...using persistence.xml-->
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>  <!--to use java prorperties in jsp file...Example - for each in jsp file-->
			<version>${jstl.verison}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${qos.logback.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.14.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.14.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.14.2</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-crypto</artifactId>
		<version>${Passcode.version}</version>	
	</dependency>	
	</dependencies>
  <packaging>war</packaging>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId> <!--to exlplain JDK version-->
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>  <!-- it will check war files in your project-->
        <version>3.2.3</version>
        <!-- tag name  Configuration 
        <configuration>             ================) if war files not available then use this tag
			<failOnMissingWebXml>false</failOnMissingWebXml>
		</configuration> -->
      </plugin>
    </plugins>
  </build>
</project>